version: 2

aliases:

   - &setup_anaconda
    name: setup_anaconda
    command: |
       mkdir $WORKDIR
       cd $WORKDIR
       curl https://repo.continuum.io/archive/Anaconda3-5.3.0-MacOSX-x86_64.sh -o anaconda3.sh
       bash ./anaconda3.sh -b -p miniconda

   - &setup_miniconda
    name: setup_miniconda
    command: |
       git clone -b validateNightly --depth 1 git@github.com:CDAT/cdat $WORKDIR/cdat
       python $WORKDIR/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

   - &prepare_firefox
     name: prepare_firefox
     command: |
        sudo apt-get purge -y firefox
        wget https://sourceforge.net/projects/ubuntuzilla/files/mozilla/apt/pool/main/f/firefox-mozilla-build/firefox-mozilla-build_63.0.3-0ubuntu1_amd64.deb
        sudo dpkg -i firefox-mozilla-build_63.0.3-0ubuntu1_amd64.deb
        wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-linux64.tar.gz
        gunzip geckodriver-v0.23.0-linux64.tar.gz
        tar -xvf geckodriver-v0.23.0-linux64.tar
        echo "xxxx ls"
        ls
        echo "xxx pwd"
        pwd
        sudo mv geckodriver /usr/local/bin
        export PATH=/usr/local/bin:$PATH
        type geckodriver
        type firefox

   - &setup_for_selenium_tests
     name: setup_for_selenium_tests
     command: |
        echo "xxx setup_for_selenium_tests xxx"
        export PATH=$WORKDIR/miniconda/bin:$PATH
        #type python
        #python -m venv venv
        #. venv/bin/activate
        pip install selenium
        pip install requests
        pip install pytest
        #pip install pytest-testconfig

   - &install_chromedriver_on_macos
     name: install_chromedriver_on_macos
     command: |
        brew update
        brew tap homebrew/cask
        brew cask install chromedriver

   - &download_selenium
     name: download_selenium
     command: |
        cd $WORKDIR
        #curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
        curl -O http://selenium-release.storage.googleapis.com/3.9/selenium-server-standalone-3.9.1.jar

   - &start_selenium
     name: start_selenium
     command: |
        cd $WORKDIR
        mkdir test-reports
        java -jar selenium-server-standalone-3.9.1.jar -log test-reports/selenium.log
     background: true

   - &setup_jupyter_vcdat
     name: setup_jupyter_vcdat
     command: |
        export PATH=$WORKDIR/miniconda/bin:$PATH
        export CDAT_ANONYMOUS_LOG=False
        #export $(dbus-launch)
        #export NSS_USE_SHARED_DB=ENABLED
        conda create -n jupyter-vcdat -c cdat/label/nightly -c conda-forge -c cdat -c anaconda nodejs "python>3" vcs jupyterlab pip nb_conda nb_conda_kernels $FFMPEG
        source activate jupyter-vcdat
        pip install sidecar
        jupyter labextension install @jupyter-widgets/jupyterlab-manager
        jupyter labextension install @jupyter-widgets/jupyterlab-sidecar
        cd $WORKDIR
        echo "XXX git clone https://github.com/CDAT/vcs.git xxx"
        git clone https://github.com/CDAT/vcs.git
        cd vcs
        ##git checkout boxfill_widgets_jupyter
        python setup.py install
        cd ..
        #echo "xxx git clone https://github.com/CDAT/jupyter-vcdat.git xxx"
        #git clone https://github.com/CDAT/jupyter-vcdat.git
        #cd jupyter-vcdat
        cd
        #git checkout vcdat2.0-sterling
        python setup.py install
        pip install selenium
        #pip install requests
        pip install pytest
        cd ..
     no_output_timeout: 30m

   - &run_chromedriver
     name: run_chromedriver
     command: |
        chromedriver --port=9515:
     background: true

   - &run_jupyter_vcdat
     name: run_jupyter_vcdat
     command: |
        pwd
        ls
        echo "xxx ls $WORKDIR xxx"
        ls $WORKDIR
        export PATH=$WORKDIR/miniconda/bin:$PATH
        export CDAT_ANONYMOUS_LOG=False
        #export $(dbus-launch)
        export NSS_USE_SHARED_DB=ENABLED
        source activate jupyter-vcdat
        cd $WORKDIR/jupyter-vcdat
        ls
        date
        jupyter lab --ip='127.0.0.1'
     background: true

   - &run_selenium_tests
     name: run_selenium_tests
     command: |
        echo "sleep for 60 seconds"
        sleep 60
        date
        export PATH=$WORKDIR/miniconda/envs/jupyter-vcdat/bin:$WORKDIR/miniconda/bin:/usr/local/bin:$PATH
        source activate jupyter-vcdat
        pytest -s -v tests/test_variable.py

   - &prep_conda_cache
     name: prep_conda_cache
     command: |
        mv $WORKDIR save_workdir

   - &get_conda_cache
     name: get_conda_cache
     command: |
        ls
        mv save_workdir workdir

   - &update_npm
     name: update_npm
     command: |
        sudo npm update npm -g
        sudo npm set registry https://registry.npmjs.org

jobs:
   linux_selenium:
      #docker:
         #- image: selenium/standalone-chrome:3.1.0
         #- image: circleci/python:3.6.2-stretch-browsers
         #- image: muryanto1/centos_for_jupyter_vcdat
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: 'workdir'
         FFMPEG: 'ffmpeg'
      steps:
         - checkout
         - run: which google-chrome
         - run: id
         - run: npm -v
         - run: npm update npm -g
         - run: npm -v
         - run: npm set registry http://registry.npmjs.org
         - run: npm install -g yarn
         - run: cat ~/.npmrc
         #- run: *prepare_firefox
         - run: *setup_miniconda
         - run: *setup_jupyter_vcdat
         - run: *run_jupyter_vcdat
         - run: *run_selenium_tests

   macos_selenium:
      macos:
         xcode: "10.1.0"
      environment:
         WORKDIR: 'workdir'
         FFMPEG: "ffmpeg>4"
         TEMP: "/tmp"
      steps:
         - checkout
         - run: which google-chrome
         - run: *install_chromedriver_on_macos
         - run: which chromedriver
         - run: id
         - run: npm -v
         - run: npm update npm -g
         - run: npm -v
         - run: npm set registry http://registry.npmjs.org
         - run: npm install -g yarn
         - run: *setup_anaconda 
         - run: *setup_jupyter_vcdat
         - run: *run_jupyter_vcdat
         #- run: *run_chromedriver
         - run: *run_selenium_tests

   docker_selenium:
      docker:
         - image: circleci/node:jessie-browsers
         - image: circleci/python:3.6.2-stretch-browsers
         #- image: selenium/standalone-chrome:3.5.1
      environment:
         WORKDIR: 'workdir'
         FFMPEG: 'ffmpeg'
         TEMP: "/tmp"
      steps:
         - checkout
         - run: which google-chrome
         - run: which chromedriver
         - run:
              name: Download Selenium
              command: |
                 curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
         - run:
              name: Start Selenium
              command: |
                 java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
              background: true
         - run: id
         - run: *setup_miniconda
         - run: *setup_jupyter_vcdat
         - run: *run_jupyter_vcdat
         #- run: *run_chromedriver
         - run: *run_selenium_tests

   run_tests:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: 'workdir'
      steps:
         - checkout
         - run: *run_selenium_tests

workflows:
   version: 2
   browser_tests:
      jobs:
         - docker_selenium
         #- macos_selenium
         #- linux_selenium
         #- run_tests:
         #     requires:
         #        - test_selenium